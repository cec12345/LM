from math import ceil               ***********program 10************                   
import numpy as np
from scipy import linalg


def lowess(x, y, f=2./3., iter=3):
    n = len(x)
    r = int(ceil(f*n))
    h = [np.sort(np.abs(x - x[i]))[r] for i in range(n)]
    w = np.clip(np.abs((x[:,None] - x[None,:]) / h), 0.0, 1.0)
    w = (1 - w**3)**3
    yest = np.zeros(n)
    delta = np.ones(n)
    for iteration in range(iter):
        for i in range(n):
            weights = delta * w[:,i]
            b = np.array([np.sum(weights*y), np.sum(weights*y*x)])
            A = np.array([[np.sum(weights), np.sum(weights*x)],
                   [np.sum(weights*x), np.sum(weights*x*x)]])
            beta = linalg.solve(A, b)
            yest[i] = beta[0] + beta[1]*x[i]

        residuals = y - yest
        s = np.median(np.abs(residuals))
        delta = np.clip(residuals / (6.0 * s), -1, 1)
        delta = (1 - delta**2)**2

    return yest                                            ********program 10 cntn*********

if __name__ == '__main__':
    import math
    n = 100
    x = np.linspace(0, 2 * math.pi, n)
    print("==========================values of x=====================")
    print(x)
    y = np.sin(x) + 0.3*np.random.randn(n)
    print("================================Values of y===================")
    print(y)
    f = 0.25
    yest = lowess(x, y, f=f, iter=3)

    import pylab as pl
    pl.clf()
    pl.plot(x, y, label='y noisy')
    pl.plot(x, yest, label='y pred')
    pl.legend()
    pl.show()

OUTPUT:

==========================values of x=====================
[0.         0.06346652 0.12693304 0.19039955 0.25386607 0.31733259
 0.38079911 0.44426563 0.50773215 0.57119866 0.63466518 0.6981317
 0.76159822 0.82506474 0.88853126 0.95199777 1.01546429 1.07893081
 1.14239733 1.20586385 1.26933037 1.33279688 1.3962634  1.45972992
 1.52319644 1.58666296 1.65012947 1.71359599 1.77706251 1.84052903
 1.90399555 1.96746207 2.03092858 2.0943951  2.15786162 2.22132814
 2.28479466 2.34826118 2.41172769 2.47519421 2.53866073 2.60212725
 2.66559377 2.72906028 2.7925268  2.85599332 2.91945984 2.98292636
 3.04639288 3.10985939 3.17332591 3.23679243 3.30025895 3.36372547
 3.42719199 3.4906585  3.55412502 3.61759154 3.68105806 3.74452458
 3.8079911  3.87145761 3.93492413 3.99839065 4.06185717 4.12532369
 4.1887902  4.25225672 4.31572324 4.37918976 4.44265628 4.5061228
 4.56958931 4.63305583 4.69652235 4.75998887 4.82345539 4.88692191
 4.95038842 5.01385494 5.07732146 5.14078798 5.2042545  5.26772102
 5.33118753 5.39465405 5.45812057 5.52158709 5.58505361 5.64852012
 5.71198664 5.77545316 5.83891968 5.9023862  5.96585272 6.02931923
 6.09278575 6.15625227 6.21971879 6.28318531]
================================Values of y===================
[ 0.45455738  0.17981008  0.78089862  0.35839742  0.73700925  0.35335879
  0.60713035  0.49118402  0.63040238  0.86500393 -0.17608595  0.55588612
  0.74227094  1.41157299  0.95076815  1.09912622  0.47449298  1.34745409
  1.04802012  1.03819332  1.1303397   0.92087734  0.98596609  1.07500158
  0.69897844  0.92586571  0.8858973   0.93156959  1.43445597  0.55557967
  1.24563602  1.6376804   0.63616153  0.62091168  1.0409096   0.83150496
  1.28049574  0.74922621  0.52422791  0.52595429  0.67096093  0.07957835
  0.28107028  0.09402761  0.38643591 -0.05952057  0.67685199 -0.07250189
  0.07420155  0.0672425  -0.54480975  0.25838658 -0.21240105 -0.44460931
 -0.13743161 -0.60087805 -0.47249481 -0.87077598 -0.51236367 -0.7566397
 -0.4238954  -0.53123102 -0.93310154 -0.85150743 -0.68748787 -0.66700354
 -1.1249592  -1.03052186 -1.09736452 -1.11247559 -1.22841901 -1.41810834
 -0.91699769 -0.56045033 -1.28846761 -0.67458232 -0.84866614 -0.71273829
 -0.73941124 -1.25846419 -1.36285793 -0.59256524 -1.66099607 -0.83644441
 -0.33503381 -0.69645024 -0.88858294 -0.29256912 -0.65352671 -0.36904968
 -0.64116557 -0.52017149 -1.31190049 -0.13912052 -0.70958021 -0.43555519
 -0.04593602 -0.11755291  0.04991832 -0.13370277]
+++GRAPH++++




